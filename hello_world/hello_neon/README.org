the complete neon intrinsics list:

* 指令格式

v{1.q}{2.r}{3.d}xxx{4.l}{5.w}{6.q}{7.b|s|h|d}_{8.lane{q}}_{9.high}_{10.n}_type

- 1.q saturating
- 2.r rounding
- 3.d doubling
- 4.l widen
- 5.w
- 6.q 128-bit
- 7.b 参数都是 scalar: int8,int16,int32,int64
- 8.lane, 使用 v[lane] 而不是 v[i]
- 9.high, 使用 a[i+x] 而不是 a[i]
- 10.n 有一个参数是 scalar 

* List of Intrinsics [0/14]

https://arm-software.github.io/acle/neon_intrinsics/advsimd.html

1. [-] Vector arithmetic [7/24]
   1. [X] Add [4/4]
      1. [X] Addition
      2. [X] Widening addition
      3. [X] Narrowing addition
      4. [X] Saturating addition
   2. [X] Multiply [6/6]
      1. [X] Multiplication
      +2. Multiply extended+
      1. [X] Multiply-accumulate
      2. [X] Multiply-accumulate and widen
      3. [X] Fused multiply-accumulate
      4. [X] Saturating multiply
      +7. Saturating multiply-accumulate+
      1. [X] Widening multiplication
      +9. Saturating multiply by scalar and widen+
      +10. Saturating multiply-accumulate by scalar and widen+
   3. [X] Polynomial [1/1]
      1. [X] Polynomial multiply
   4. [ ] Division
   5. [X] Subtract [4/4]
      1. [X] Subtraction
      2. [X] Widening subtraction
      3. [X] Narrowing subtraction
      4. [X] Saturating subtract
   6. [X] Absolute [6/6]
      1. [X] Absolute difference
      2. [X] Widening absolute difference
      3. [X] Absolute difference and accumulate
      4. [X] Widening absolute difference and accumulate
      5. [X] Absolute value
      6. [X] Saturating absolute value
   7. [X] Maximum
   8. [X] Minimum
   9. [ ] Rounding
   10. [ ] Reciprocal [0/3]
       1. [ ] Reciprocal estimate
       2. [ ] Reciprocal square-root estimate
       3. [ ] Reciprocal exponent
   11. [ ] Square root
   12. [ ] Pairwise arithmetic [0/6]
       1. [ ] Pairwise addition
       2. [ ] Pairwise addition and widen
       3. [ ] Pairwise maximum
       4. [ ] Pairwise minimum
       5. [ ] Pairwise maximum (IEEE754)
       6. [ ] Pairwise minimum (IEEE754)
   13. [ ] Across vector arithmetic [0/6]
       1. [ ] Addition across vector
       2. [ ] Addition across vector widening
       3. [ ] Maximum across vector
       4. [ ] Minimum across vector
       5. [ ] Maximum across vector (IEEE754)
       6. [ ] Minimum across vector (IEEE754)
   14. [ ] Compare [0/11]
       1. [ ] Bitwise equal
       2. [ ] Bitwise equal to zero
       3. [ ] Greater than or equal to
       4. [ ] Less than or equal to
       5. [ ] Greater than
       6. [ ] Less than
       7. [ ] Absolute greater than or equal to
       8. [ ] Absolute less than or equal to
       9. [ ] Absolute greater than
       10. [ ] Absolute less than
       11. [ ] Bitwise not equal to zero
   15. [ ] Shift [0/2]
       1. [ ] Left [0/6]
          1. [ ] Vector shift left
          2. [ ] Vector saturating shift left
          3. [ ] Vector rounding shift left
          4. [ ] Vector saturating rounding shift left
          5. [ ] Vector shift left and widen
          6. [ ] Vector shift left and insert
       2. [ ] Right [0/9]
          1. [ ] Vector shift right
          2. [ ] Vector rounding shift right
          3. [ ] Vector shift right and accumulate
          4. [ ] Vector rounding shift right and accumulate
          5. [ ] Vector shift right and narrow
          6. [ ] Vector saturating shift right and narrow
          7. [ ] Vector saturating rounding shift right and narrow
          8. [ ] Vector rounding shift right and narrow
          9. [ ] Vector shift right and insert
   16. [ ] Data type conversion [0/2]
       1. [ ] Conversions
       2. [ ] Reinterpret casts
   17. [ ] Move [0/3]
       1. [ ] Narrow
       2. [ ] Widen
       3. [ ] Saturating narrow
   18. [ ] Scalar arithmetic [0/6]
       1. [ ] Vector multiply-accumulate by scalar
       2. [ ] Vector multiply-subtract by scalar
       3. [ ] Vector multiply by scalar
       4. [ ] Vector multiply by scalar and widen
       5. [ ] Vector multiply-accumulate by scalar and widen
       6. [ ] Fused multiply-accumulate by scalar
   19. [ ] Logical [0/7]
       1. [ ] Negate
       2. [ ] Saturating Negate
       3. [ ] Bitwise NOT
       4. [ ] AND
       5. [ ] OR
       6. [ ] Exclusive OR
       7. [ ] OR-NOT
   20. [ ] Bit manipulation [0/5]
       1. [ ] Count leading sign bits
       2. [ ] Count leading zeros
       3. [ ] Population count
       4. [ ] Bitwise clear
       5. [ ] Bitwise select
   21. [ ] Vector manipulation [0/13]
       1. [ ] Copy vector lane
       2. [ ] Reverse bits within elements
       3. [ ] Create vector
       4. [ ] Set all lanes to the same value
       5. [ ] Combine vectors
       6. [ ] Split vectors
       7. [ ] Extract one element from vector
       8. [ ] Extract vector from a pair of vectors
       9. [ ] Reverse elements
       10. [ ] Zip elements
       11. [ ] Unzip elements
       12. [ ] Transpose elements
       13. [ ] Set vector lane
   22. [ ] Load [0/2]
       1. [ ] Stride
       2. [ ] Load
   23. [ ] Store [0/2]
       1. [ ] Stride
       2. [ ] Store
   24. [ ] Table lookup [0/2]
       1. [ ] Table lookup
       2. [ ] Extended table lookup
2. [ ] Crypto [0/3]
   1. [ ] Cryptography [0/3]
      1. [ ] AES
      2. [ ] SHA1
      3. [ ] SHA256
   2. [ ] Vector arithmetic
   3. [ ] Polynomial [0/2]
      1. [ ] Polynomial multiply
      2. [ ] Polynomial addition
3. [ ] CRC32 [0/1]
   1. [ ] Cryptography [0/1]
      1. [ ] CRC32
4. [ ] sqrdmlah intrinsics (From ARMv8.1-A) [0/2]
   1. [ ] Vector arithmetic
   2. [ ] Multiply [0/2]
      1. [ ] Saturating multiply-accumulate
      2. [ ] Saturating multiply-accumulate by element
5. [ ] fp16 scalar intrinsics (available through from ARMv8.2-A) [0/4]
   1. [ ] Vector arithmetic [0/10]
      1. [ ] Absolute [0/2]
         1. [ ] Absolute value
         2. [ ] Absolute difference
      2. [ ] Reciprocal [0/3]
         1. [ ] Reciprocal estimate
         2. [ ] Reciprocal square-root estimate
         3. [ ] Reciprocal step
      3. [ ] Rounding
      4. [ ] Square root
      5. [ ] Add [0/1]
         1. [ ] Addition
      6. [ ] Division
      7. [ ] Maximum
      8. [ ] Minimum
      9. [ ] Multiply [0/3]
         1. [ ] Multiplication
         2. [ ] Multiply extended
         3. [ ] Fused multiply-accumulate
      10. [ ] Subtract [0/1]
          1. [ ] Subtraction
   2. [ ] Compare [0/14]
      1. [ ] Bitwise equal to zero
      2. [ ] Greater than or equal to zero
      3. [ ] Greater than zero
      4. [ ] Less than or equal to zero
      5. [ ] Less than zero
      6. [ ] Absolute greater than or equal to
      7. [ ] Absolute greater than
      8. [ ] Absolute less than or equal to
      9. [ ] Absolute less than
      10. [ ] Equal to
      11. [ ] Greater than or equal to
      12. [ ] Greater than
      13. [ ] Less than or equal to
      14. [ ] Less than
   3. [ ] Data type conversion [0/1]
      1. [ ] Conversions
   4. [ ] Logical [0/1]
      1. [ ] Negate
6. [ ] fp16 vector intrinsics (from ARMv8.2-A) [0/4]
   1. [ ] Vector arithmetic [0/11]
      1. [ ] Absolute [0/2]
         1. [ ] Absolute value
         2. [ ] Absolute difference
      2. [ ] Reciprocal [0/3]
         1. [ ] Reciprocal estimate
         2. [ ] Reciprocal square-root estimate
         3. [ ] Reciprocal step
      3. [ ] Rounding
      4. [ ] Square root
      5. [ ] Add [0/1]
         1. [ ] Addition
      6. [ ] Division
      7. [ ] Maximum
      8. [ ] Minimum
      9. [ ] Multiply [0/3]
         1. [ ] Multiplication
         2. [ ] Multiply extended
         3. [ ] Fused multiply-accumulate
      10. [ ] Pairwise arithmetic [0/3]
          1. [ ] Pairwise addition
          2. [ ] Pairwise maximum
          3. [ ] Pairwise minimum
      11. [ ] Subtract [0/1]
          1. [ ] Subtraction
   2. [ ] Compare [0/14]
      1. [ ] Bitwise equal to zero
      2. [ ] Greater than or equal to zero
      3. [ ] Greater than zero
      4. [ ] Less than or equal to zero
      5. [ ] Less than zero
      6. [ ] Absolute greater than or equal to
      7. [ ] Absolute greater than
      8. [ ] Absolute less than or equal to
      9. [ ] Absolute less than
      10. [ ] Equal to
      11. [ ] Greater than or equal to
      12. [ ] Greater than
      13. [ ] Less than or equal to
      14. [ ] Less than
   3. [ ] Data type conversion [0/1]
      1. [ ] Conversions
   4. [ ] Logical [0/1]
      1. [ ] Negate
7. [ ] Additional intrinsics added in ACLE 3.0 for data processing (Always
   available) [0/3]
   1. [ ] Bit manipulation [0/1]
      1. [ ] Bitwise select
   2. [ ] Vector manipulation [0/6]
      1. [ ] Zip elements
      2. [ ] Unzip elements
      3. [ ] Transpose elements
      4. [ ] Set all lanes to the same value
      5. [ ] Extract vector from a pair of vectors
      6. [ ] Reverse elements
   3. [ ] Move [0/1]
      1. [ ] Vector move
8. [ ] Dot Product intrinsics added for ARMv8.2-a and newer. Requires the
   +dotprod architecture extension. [0/1]
   1. [ ] Vector arithmetic [0/1]
      1. [ ] Dot product
9. [ ] Armv8.4-a intrinsics. [0/2]
   1. [ ] Cryptography [0/3]
      1. [ ] SHA512
      2. [ ] SM3
      3. [ ] SM4
   2. [ ] Logical [0/4]
      1. [ ] Exclusive OR
      2. [ ] Rotate and exclusive OR
      3. [ ] Exclusive OR and rotate
      4. [ ] Bit clear and exclusive OR
10. [ ] FP16 Armv8.4-a [0/1]
    1. [ ] Vector arithmetic [0/1]
       1. [ ] Multiply [0/1]
          1. [ ] Fused multiply-accumulate
11. [ ] Complex operations from Armv8.3-a [0/1]
    1. [ ] Complex arithmetic [0/3]
       1. [ ] Complex addition
       2. [ ] Complex multiply-accumulate
       3. [ ] Complex multiply-accumulate by scalar
12. [ ] Floating-point rounding intrinsics from Armv8.5-A [0/1]
    1. [ ] Vector arithmetic [0/1]
       1. [ ] Rounding
13. [ ] Matrix multiplication intrinsics from Armv8.6-A [0/1]
    1. [ ] Vector arithmetic [0/2]
       1. [ ] Matrix multiply
       2. [ ] Dot product
14. [ ] Bfloat16 intrinsics Requires the +bf16 architecture extension. [0/6]
    1. [ ] Vector manipulation [0/6]
       1. [ ] Create vector
       2. [ ] Set all lanes to the same value
       3. [ ] Combine vectors
       4. [ ] Split vectors
       5. [ ] Set vector lane
       6. [ ] Copy vector lane
    2. [ ] Load [0/1]
       1. [ ] Stride
    3. [ ] Store [0/1]
       1. [ ] Stride
    4. [ ] Data type conversion [0/2]
       1. [ ] Reinterpret casts
       2. [ ] Conversions
    5. [ ] Vector arithmetic [0/3]
       1. [ ] Dot product
       2. [ ] Matrix multiply
       3. [ ] Multiply [0/1]
          1. [ ] Multiply-accumulate
    6. [ ] Scalar arithmetic [0/1]
       1. [ ] Vector multiply-accumulate by scalar
